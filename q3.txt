import 'dart:collection';
List<List<int>> permuteUnique(List<int> nums) {
  nums.sort(); 
  List<List<int>> result = [];
  List<bool> used = List.filled(nums.length, false);
  List<int> tempList = [];

  void backtrack() {
    if (tempList.length == nums.length) {
      result.add(List.from(tempList)); 
      return;
    }
    for (int i = 0; i < nums.length; i++) {
      if (used[i] || (i > 0 && nums[i] == nums[i - 1] && !used[i - 1])) {
        continue; 
      }
      used[i] = true;
      tempList.add(nums[i]);
      backtrack();
      used[i] = false;
      tempList.removeLast();
    }
  }
  backtrack();
  return result;
}
void main() {
  List<int> nums1 = [1, 1, 2];
  print("Input: $nums1 => Output: ${permuteUnique(nums1)}");
  List<int> nums2 = [1, 2, 3];
  print("Input: $nums2 => Output: ${permuteUnique(nums2)}");
  List<int> nums3 = [4, 5, 6];
  print("Input: $nums3 => Output: ${permuteUnique(nums3)}");
}



Output:

Input: [1, 1, 2] => Output: [[1, 1, 2], [1, 2, 1], [2, 1, 1]]
Input: [1, 2, 3] => Output: [[1, 2, 3], [1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2], [3, 2, 1]]
Input: [4, 5, 6] => Output: [[4, 5, 6], [4, 6, 5], [5, 4, 6], [5, 6, 4], [6, 4, 5], [6, 5, 4]]




